@model ConfigurationModel

@using Nop.Plugin.Comelite.LiveChat.Models;
@{
    Layout = "";   

    
    //Layout = ViewBag.ConfigurePage ? "" : "~/Administration/Views/Shared/_AdminLayout.cshtml";

    ////page title
    //ViewBag.Title = T("Nop.Plugin.Comelite.LiveChat.Admin.Configuration").Text;
    
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="section-header">
@*        <div class="title">
            <img src="@Url.Content("~/Administration/Content/images/ico-configuration.png")" alt="" />
            @T("Nop.Plugin.Comelite.LiveChat.Admin.Configuration")
        </div>*@
        <div class="options">
            <input type="submit" name="save" class="k-button" value="@T("Admin.Common.Save")" />
         </div>
    </div>
    
    if (Model.IsFreeVersion)
    {
    <text>
    <div>
        The trial verion displays the "Developed by Comelite" logo everywhere the plugin is used. 
        To remove it, please <a href="https://www.comelite.net/product/nop-livechat">purchase</a> the plugin
    </div>
    </text>    
    }
    
    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.LicenseKey)
            </td>

            <td class="adminData">
                @Html.EditorFor(model => model.LicenseKey)
                @Html.ValidationMessageFor(model => model.LicenseKey)
            </td>
        </tr>
    </table>
    
    @Html.Action("StoreScopeConfiguration", "Setting", new { area = "Admin" })

    @*<div id="generalsettings-edit">
        <span>@T("Nop.Plugin.Comelite.LiveChat.Admin.NoConfigurationIsRequired")</span>
    </div>*@
    
        <script type="text/javascript">
            $(document).ready(function () {

                $("#@Html.FieldIdFor(model => model.ConversationAllowCustomersToSelectPageSize)").click(toggleConversationPageSize);

            toggleConversationPageSize();
        });


        function toggleConversationPageSize() {
            if ($('#@Html.FieldIdFor(model => model.ConversationAllowCustomersToSelectPageSize)').is(':checked')) {
                $('#pnlConversationPageSize').hide();
                $('#pnlConversationPageSizeOptions').show();
            } else {
                $('#pnlConversationPageSize').show();
                $('#pnlConversationPageSizeOptions').hide();
            }
        }

    </script>

    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.OverrideStoreCheckboxFor(model => model.WidgetZone_MyChats_OverrideForStore, model => model.WidgetZone_MyChats, Model.ActiveStoreScopeConfiguration)
                @Html.NopLabelFor(model => model.WidgetZone_MyChats):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.WidgetZone_MyChats, Model.AvailableWidgetZone_MyChats)
                @Html.ValidationMessageFor(model => model.WidgetZone_MyChats)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.OverrideStoreCheckboxFor(model => model.WidgetZone_Conversation_OverrideForStore, model => model.WidgetZone_Conversation, Model.ActiveStoreScopeConfiguration)
                @Html.NopLabelFor(model => model.WidgetZone_Conversation):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.WidgetZone_Conversation, Model.AvailableWidgetZone_Conversation)
                @Html.ValidationMessageFor(model => model.WidgetZone_Conversation)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.OverrideStoreCheckboxFor(model => model.CustomStyles_OverrideForStore, model => model.CustomStyles, Model.ActiveStoreScopeConfiguration)
                @Html.NopLabelFor(model => model.CustomStyles):
            </td>
            <td class="adminData">
                @Html.TextAreaFor(model => model.CustomStyles, new { style = "Width: 450px; Height: 450px;" })
                @Html.ValidationMessageFor(model => model.CustomStyles)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.OverrideStoreCheckboxFor(model => model.ConversationAllowCustomersToSelectPageSize_OverrideForStore, model => model.ConversationAllowCustomersToSelectPageSize, Model.ActiveStoreScopeConfiguration)
                @Html.NopLabelFor(model => model.ConversationAllowCustomersToSelectPageSize):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.ConversationAllowCustomersToSelectPageSize)
                @Html.ValidationMessageFor(model => model.ConversationAllowCustomersToSelectPageSize)
            </td>
        </tr>
        <tr id="pnlConversationPageSize">
            <td class="adminTitle">
                @Html.OverrideStoreCheckboxFor(model => model.ConversationPageSize_OverrideForStore, model => model.ConversationPageSize, Model.ActiveStoreScopeConfiguration)
                @Html.NopLabelFor(model => model.ConversationPageSize):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.ConversationPageSize)
                @Html.ValidationMessageFor(model => model.ConversationPageSize)
            </td>
        </tr>
        <tr id="pnlConversationPageSizeOptions">
            <td class="adminTitle">
                @Html.OverrideStoreCheckboxFor(model => model.ConversationPageSizeOptions_OverrideForStore, model => model.ConversationPageSizeOptions, Model.ActiveStoreScopeConfiguration)
                @Html.NopLabelFor(model => model.ConversationPageSizeOptions):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.ConversationPageSizeOptions)
                @Html.ValidationMessageFor(model => model.ConversationPageSizeOptions)
            </td>
        </tr>
        <tr >
            <td class="adminTitle">
                @Html.OverrideStoreCheckboxFor(model => model.SelectedCustomerRoleIds_OverrideForStore, "checkboxes", Model.ActiveStoreScopeConfiguration)
                @Html.NopLabelFor(model => model.AvailableCustomerRoles):
            </td>
            <td class="adminData" id="checkboxes">
                @if (Model.AvailableCustomerRoles != null && Model.AvailableCustomerRoles.Count > 0)
                {
                    foreach (var userRole in Model.AvailableCustomerRoles)
                    {
                    <div>
                        <input type="checkbox" name="SelectedCustomerRoleIds" value="@userRole.Id" checked="@(Model.SelectedCustomerRoleIds != null && Model.SelectedCustomerRoleIds.Contains(userRole.Id))" />@userRole.Name
                    </div>
                    }
                }
                else
                {
                    <div>No customer roles defined</div>
                }
            </td>
        </tr>

    </table>
}

